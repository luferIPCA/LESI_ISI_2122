//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UsaWCF_BD_WIN.HotelWS {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Hotel", Namespace="http://www.ipca.pt/isi")]
    [System.SerializableAttribute()]
    public partial class Hotel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CapacidadeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CidadeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Capacidade {
            get {
                return this.CapacidadeField;
            }
            set {
                if ((this.CapacidadeField.Equals(value) != true)) {
                    this.CapacidadeField = value;
                    this.RaisePropertyChanged("Capacidade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cidade {
            get {
                return this.CidadeField;
            }
            set {
                if ((object.ReferenceEquals(this.CidadeField, value) != true)) {
                    this.CidadeField = value;
                    this.RaisePropertyChanged("Cidade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nome {
            get {
                return this.NomeField;
            }
            set {
                if ((object.ReferenceEquals(this.NomeField, value) != true)) {
                    this.NomeField = value;
                    this.RaisePropertyChanged("Nome");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestData", Namespace="http://www.ipca.pt/isi")]
    [System.SerializableAttribute()]
    public partial class RequestData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string detailsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string details {
            get {
                return this.detailsField;
            }
            set {
                if ((object.ReferenceEquals(this.detailsField, value) != true)) {
                    this.detailsField = value;
                    this.RaisePropertyChanged("details");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseData", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class ResponseData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TechnologyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Age {
            get {
                return this.AgeField;
            }
            set {
                if ((object.ReferenceEquals(this.AgeField, value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Exp {
            get {
                return this.ExpField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpField, value) != true)) {
                    this.ExpField = value;
                    this.RaisePropertyChanged("Exp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Technology {
            get {
                return this.TechnologyField;
            }
            set {
                if ((object.ReferenceEquals(this.TechnologyField, value) != true)) {
                    this.TechnologyField = value;
                    this.RaisePropertyChanged("Technology");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HotelWS.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetHotelsList", ReplyAction="http://tempuri.org/IService/GetHotelsListResponse")]
        UsaWCF_BD_WIN.HotelWS.Hotel[] GetHotelsList();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/GetHotelsList", ReplyAction="http://tempuri.org/IService/GetHotelsListResponse")]
        System.IAsyncResult BeginGetHotelsList(System.AsyncCallback callback, object asyncState);
        
        UsaWCF_BD_WIN.HotelWS.Hotel[] EndGetHotelsList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetHotelsListJson", ReplyAction="http://tempuri.org/IService/GetHotelsListJsonResponse")]
        UsaWCF_BD_WIN.HotelWS.Hotel[] GetHotelsListJson();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/GetHotelsListJson", ReplyAction="http://tempuri.org/IService/GetHotelsListJsonResponse")]
        System.IAsyncResult BeginGetHotelsListJson(System.AsyncCallback callback, object asyncState);
        
        UsaWCF_BD_WIN.HotelWS.Hotel[] EndGetHotelsListJson(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetHotelById", ReplyAction="http://tempuri.org/IService/GetHotelByIdResponse")]
        UsaWCF_BD_WIN.HotelWS.Hotel GetHotelById(string id);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/GetHotelById", ReplyAction="http://tempuri.org/IService/GetHotelByIdResponse")]
        System.IAsyncResult BeginGetHotelById(string id, System.AsyncCallback callback, object asyncState);
        
        UsaWCF_BD_WIN.HotelWS.Hotel EndGetHotelById(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetHotelByIDII", ReplyAction="http://tempuri.org/IService/GetHotelByIDIIResponse")]
        UsaWCF_BD_WIN.HotelWS.Hotel GetHotelByIDII(string n, string c);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/GetHotelByIDII", ReplyAction="http://tempuri.org/IService/GetHotelByIDIIResponse")]
        System.IAsyncResult BeginGetHotelByIDII(string n, string c, System.AsyncCallback callback, object asyncState);
        
        UsaWCF_BD_WIN.HotelWS.Hotel EndGetHotelByIDII(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddHotel", ReplyAction="http://tempuri.org/IService/AddHotelResponse")]
        void AddHotel(string hotelName, string city, string capacity);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/AddHotel", ReplyAction="http://tempuri.org/IService/AddHotelResponse")]
        System.IAsyncResult BeginAddHotel(string hotelName, string city, string capacity, System.AsyncCallback callback, object asyncState);
        
        void EndAddHotel(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddOneHotel", ReplyAction="http://tempuri.org/IService/AddOneHotelResponse")]
        UsaWCF_BD_WIN.HotelWS.Hotel[] AddOneHotel(UsaWCF_BD_WIN.HotelWS.Hotel h);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/AddOneHotel", ReplyAction="http://tempuri.org/IService/AddOneHotelResponse")]
        System.IAsyncResult BeginAddOneHotel(UsaWCF_BD_WIN.HotelWS.Hotel h, System.AsyncCallback callback, object asyncState);
        
        UsaWCF_BD_WIN.HotelWS.Hotel[] EndAddOneHotel(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateHotel", ReplyAction="http://tempuri.org/IService/UpdateHotelResponse")]
        void UpdateHotel(string hotelName, string capacity);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/UpdateHotel", ReplyAction="http://tempuri.org/IService/UpdateHotelResponse")]
        System.IAsyncResult BeginUpdateHotel(string hotelName, string capacity, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateHotel(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteHotel", ReplyAction="http://tempuri.org/IService/DeleteHotelResponse")]
        void DeleteHotel(string id);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/DeleteHotel", ReplyAction="http://tempuri.org/IService/DeleteHotelResponse")]
        System.IAsyncResult BeginDeleteHotel(string id, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteHotel(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Auth", ReplyAction="http://tempuri.org/IService/AuthResponse")]
        UsaWCF_BD_WIN.HotelWS.ResponseData Auth(UsaWCF_BD_WIN.HotelWS.RequestData data);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/Auth", ReplyAction="http://tempuri.org/IService/AuthResponse")]
        System.IAsyncResult BeginAuth(UsaWCF_BD_WIN.HotelWS.RequestData data, System.AsyncCallback callback, object asyncState);
        
        UsaWCF_BD_WIN.HotelWS.ResponseData EndAuth(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : UsaWCF_BD_WIN.HotelWS.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetHotelsListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetHotelsListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public UsaWCF_BD_WIN.HotelWS.Hotel[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((UsaWCF_BD_WIN.HotelWS.Hotel[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetHotelsListJsonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetHotelsListJsonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public UsaWCF_BD_WIN.HotelWS.Hotel[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((UsaWCF_BD_WIN.HotelWS.Hotel[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetHotelByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetHotelByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public UsaWCF_BD_WIN.HotelWS.Hotel Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((UsaWCF_BD_WIN.HotelWS.Hotel)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetHotelByIDIICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetHotelByIDIICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public UsaWCF_BD_WIN.HotelWS.Hotel Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((UsaWCF_BD_WIN.HotelWS.Hotel)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddOneHotelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddOneHotelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public UsaWCF_BD_WIN.HotelWS.Hotel[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((UsaWCF_BD_WIN.HotelWS.Hotel[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AuthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public UsaWCF_BD_WIN.HotelWS.ResponseData Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((UsaWCF_BD_WIN.HotelWS.ResponseData)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<UsaWCF_BD_WIN.HotelWS.IService>, UsaWCF_BD_WIN.HotelWS.IService {
        
        private BeginOperationDelegate onBeginGetHotelsListDelegate;
        
        private EndOperationDelegate onEndGetHotelsListDelegate;
        
        private System.Threading.SendOrPostCallback onGetHotelsListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetHotelsListJsonDelegate;
        
        private EndOperationDelegate onEndGetHotelsListJsonDelegate;
        
        private System.Threading.SendOrPostCallback onGetHotelsListJsonCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetHotelByIdDelegate;
        
        private EndOperationDelegate onEndGetHotelByIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetHotelByIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetHotelByIDIIDelegate;
        
        private EndOperationDelegate onEndGetHotelByIDIIDelegate;
        
        private System.Threading.SendOrPostCallback onGetHotelByIDIICompletedDelegate;
        
        private BeginOperationDelegate onBeginAddHotelDelegate;
        
        private EndOperationDelegate onEndAddHotelDelegate;
        
        private System.Threading.SendOrPostCallback onAddHotelCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddOneHotelDelegate;
        
        private EndOperationDelegate onEndAddOneHotelDelegate;
        
        private System.Threading.SendOrPostCallback onAddOneHotelCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateHotelDelegate;
        
        private EndOperationDelegate onEndUpdateHotelDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateHotelCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteHotelDelegate;
        
        private EndOperationDelegate onEndDeleteHotelDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteHotelCompletedDelegate;
        
        private BeginOperationDelegate onBeginAuthDelegate;
        
        private EndOperationDelegate onEndAuthDelegate;
        
        private System.Threading.SendOrPostCallback onAuthCompletedDelegate;
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetHotelsListCompletedEventArgs> GetHotelsListCompleted;
        
        public event System.EventHandler<GetHotelsListJsonCompletedEventArgs> GetHotelsListJsonCompleted;
        
        public event System.EventHandler<GetHotelByIdCompletedEventArgs> GetHotelByIdCompleted;
        
        public event System.EventHandler<GetHotelByIDIICompletedEventArgs> GetHotelByIDIICompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddHotelCompleted;
        
        public event System.EventHandler<AddOneHotelCompletedEventArgs> AddOneHotelCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateHotelCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteHotelCompleted;
        
        public event System.EventHandler<AuthCompletedEventArgs> AuthCompleted;
        
        public UsaWCF_BD_WIN.HotelWS.Hotel[] GetHotelsList() {
            return base.Channel.GetHotelsList();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetHotelsList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetHotelsList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public UsaWCF_BD_WIN.HotelWS.Hotel[] EndGetHotelsList(System.IAsyncResult result) {
            return base.Channel.EndGetHotelsList(result);
        }
        
        private System.IAsyncResult OnBeginGetHotelsList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetHotelsList(callback, asyncState);
        }
        
        private object[] OnEndGetHotelsList(System.IAsyncResult result) {
            UsaWCF_BD_WIN.HotelWS.Hotel[] retVal = this.EndGetHotelsList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetHotelsListCompleted(object state) {
            if ((this.GetHotelsListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetHotelsListCompleted(this, new GetHotelsListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetHotelsListAsync() {
            this.GetHotelsListAsync(null);
        }
        
        public void GetHotelsListAsync(object userState) {
            if ((this.onBeginGetHotelsListDelegate == null)) {
                this.onBeginGetHotelsListDelegate = new BeginOperationDelegate(this.OnBeginGetHotelsList);
            }
            if ((this.onEndGetHotelsListDelegate == null)) {
                this.onEndGetHotelsListDelegate = new EndOperationDelegate(this.OnEndGetHotelsList);
            }
            if ((this.onGetHotelsListCompletedDelegate == null)) {
                this.onGetHotelsListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetHotelsListCompleted);
            }
            base.InvokeAsync(this.onBeginGetHotelsListDelegate, null, this.onEndGetHotelsListDelegate, this.onGetHotelsListCompletedDelegate, userState);
        }
        
        public UsaWCF_BD_WIN.HotelWS.Hotel[] GetHotelsListJson() {
            return base.Channel.GetHotelsListJson();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetHotelsListJson(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetHotelsListJson(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public UsaWCF_BD_WIN.HotelWS.Hotel[] EndGetHotelsListJson(System.IAsyncResult result) {
            return base.Channel.EndGetHotelsListJson(result);
        }
        
        private System.IAsyncResult OnBeginGetHotelsListJson(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetHotelsListJson(callback, asyncState);
        }
        
        private object[] OnEndGetHotelsListJson(System.IAsyncResult result) {
            UsaWCF_BD_WIN.HotelWS.Hotel[] retVal = this.EndGetHotelsListJson(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetHotelsListJsonCompleted(object state) {
            if ((this.GetHotelsListJsonCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetHotelsListJsonCompleted(this, new GetHotelsListJsonCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetHotelsListJsonAsync() {
            this.GetHotelsListJsonAsync(null);
        }
        
        public void GetHotelsListJsonAsync(object userState) {
            if ((this.onBeginGetHotelsListJsonDelegate == null)) {
                this.onBeginGetHotelsListJsonDelegate = new BeginOperationDelegate(this.OnBeginGetHotelsListJson);
            }
            if ((this.onEndGetHotelsListJsonDelegate == null)) {
                this.onEndGetHotelsListJsonDelegate = new EndOperationDelegate(this.OnEndGetHotelsListJson);
            }
            if ((this.onGetHotelsListJsonCompletedDelegate == null)) {
                this.onGetHotelsListJsonCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetHotelsListJsonCompleted);
            }
            base.InvokeAsync(this.onBeginGetHotelsListJsonDelegate, null, this.onEndGetHotelsListJsonDelegate, this.onGetHotelsListJsonCompletedDelegate, userState);
        }
        
        public UsaWCF_BD_WIN.HotelWS.Hotel GetHotelById(string id) {
            return base.Channel.GetHotelById(id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetHotelById(string id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetHotelById(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public UsaWCF_BD_WIN.HotelWS.Hotel EndGetHotelById(System.IAsyncResult result) {
            return base.Channel.EndGetHotelById(result);
        }
        
        private System.IAsyncResult OnBeginGetHotelById(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string id = ((string)(inValues[0]));
            return this.BeginGetHotelById(id, callback, asyncState);
        }
        
        private object[] OnEndGetHotelById(System.IAsyncResult result) {
            UsaWCF_BD_WIN.HotelWS.Hotel retVal = this.EndGetHotelById(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetHotelByIdCompleted(object state) {
            if ((this.GetHotelByIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetHotelByIdCompleted(this, new GetHotelByIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetHotelByIdAsync(string id) {
            this.GetHotelByIdAsync(id, null);
        }
        
        public void GetHotelByIdAsync(string id, object userState) {
            if ((this.onBeginGetHotelByIdDelegate == null)) {
                this.onBeginGetHotelByIdDelegate = new BeginOperationDelegate(this.OnBeginGetHotelById);
            }
            if ((this.onEndGetHotelByIdDelegate == null)) {
                this.onEndGetHotelByIdDelegate = new EndOperationDelegate(this.OnEndGetHotelById);
            }
            if ((this.onGetHotelByIdCompletedDelegate == null)) {
                this.onGetHotelByIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetHotelByIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetHotelByIdDelegate, new object[] {
                        id}, this.onEndGetHotelByIdDelegate, this.onGetHotelByIdCompletedDelegate, userState);
        }
        
        public UsaWCF_BD_WIN.HotelWS.Hotel GetHotelByIDII(string n, string c) {
            return base.Channel.GetHotelByIDII(n, c);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetHotelByIDII(string n, string c, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetHotelByIDII(n, c, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public UsaWCF_BD_WIN.HotelWS.Hotel EndGetHotelByIDII(System.IAsyncResult result) {
            return base.Channel.EndGetHotelByIDII(result);
        }
        
        private System.IAsyncResult OnBeginGetHotelByIDII(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string n = ((string)(inValues[0]));
            string c = ((string)(inValues[1]));
            return this.BeginGetHotelByIDII(n, c, callback, asyncState);
        }
        
        private object[] OnEndGetHotelByIDII(System.IAsyncResult result) {
            UsaWCF_BD_WIN.HotelWS.Hotel retVal = this.EndGetHotelByIDII(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetHotelByIDIICompleted(object state) {
            if ((this.GetHotelByIDIICompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetHotelByIDIICompleted(this, new GetHotelByIDIICompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetHotelByIDIIAsync(string n, string c) {
            this.GetHotelByIDIIAsync(n, c, null);
        }
        
        public void GetHotelByIDIIAsync(string n, string c, object userState) {
            if ((this.onBeginGetHotelByIDIIDelegate == null)) {
                this.onBeginGetHotelByIDIIDelegate = new BeginOperationDelegate(this.OnBeginGetHotelByIDII);
            }
            if ((this.onEndGetHotelByIDIIDelegate == null)) {
                this.onEndGetHotelByIDIIDelegate = new EndOperationDelegate(this.OnEndGetHotelByIDII);
            }
            if ((this.onGetHotelByIDIICompletedDelegate == null)) {
                this.onGetHotelByIDIICompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetHotelByIDIICompleted);
            }
            base.InvokeAsync(this.onBeginGetHotelByIDIIDelegate, new object[] {
                        n,
                        c}, this.onEndGetHotelByIDIIDelegate, this.onGetHotelByIDIICompletedDelegate, userState);
        }
        
        public void AddHotel(string hotelName, string city, string capacity) {
            base.Channel.AddHotel(hotelName, city, capacity);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddHotel(string hotelName, string city, string capacity, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddHotel(hotelName, city, capacity, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddHotel(System.IAsyncResult result) {
            base.Channel.EndAddHotel(result);
        }
        
        private System.IAsyncResult OnBeginAddHotel(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string hotelName = ((string)(inValues[0]));
            string city = ((string)(inValues[1]));
            string capacity = ((string)(inValues[2]));
            return this.BeginAddHotel(hotelName, city, capacity, callback, asyncState);
        }
        
        private object[] OnEndAddHotel(System.IAsyncResult result) {
            this.EndAddHotel(result);
            return null;
        }
        
        private void OnAddHotelCompleted(object state) {
            if ((this.AddHotelCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddHotelCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddHotelAsync(string hotelName, string city, string capacity) {
            this.AddHotelAsync(hotelName, city, capacity, null);
        }
        
        public void AddHotelAsync(string hotelName, string city, string capacity, object userState) {
            if ((this.onBeginAddHotelDelegate == null)) {
                this.onBeginAddHotelDelegate = new BeginOperationDelegate(this.OnBeginAddHotel);
            }
            if ((this.onEndAddHotelDelegate == null)) {
                this.onEndAddHotelDelegate = new EndOperationDelegate(this.OnEndAddHotel);
            }
            if ((this.onAddHotelCompletedDelegate == null)) {
                this.onAddHotelCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddHotelCompleted);
            }
            base.InvokeAsync(this.onBeginAddHotelDelegate, new object[] {
                        hotelName,
                        city,
                        capacity}, this.onEndAddHotelDelegate, this.onAddHotelCompletedDelegate, userState);
        }
        
        public UsaWCF_BD_WIN.HotelWS.Hotel[] AddOneHotel(UsaWCF_BD_WIN.HotelWS.Hotel h) {
            return base.Channel.AddOneHotel(h);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddOneHotel(UsaWCF_BD_WIN.HotelWS.Hotel h, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddOneHotel(h, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public UsaWCF_BD_WIN.HotelWS.Hotel[] EndAddOneHotel(System.IAsyncResult result) {
            return base.Channel.EndAddOneHotel(result);
        }
        
        private System.IAsyncResult OnBeginAddOneHotel(object[] inValues, System.AsyncCallback callback, object asyncState) {
            UsaWCF_BD_WIN.HotelWS.Hotel h = ((UsaWCF_BD_WIN.HotelWS.Hotel)(inValues[0]));
            return this.BeginAddOneHotel(h, callback, asyncState);
        }
        
        private object[] OnEndAddOneHotel(System.IAsyncResult result) {
            UsaWCF_BD_WIN.HotelWS.Hotel[] retVal = this.EndAddOneHotel(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddOneHotelCompleted(object state) {
            if ((this.AddOneHotelCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddOneHotelCompleted(this, new AddOneHotelCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddOneHotelAsync(UsaWCF_BD_WIN.HotelWS.Hotel h) {
            this.AddOneHotelAsync(h, null);
        }
        
        public void AddOneHotelAsync(UsaWCF_BD_WIN.HotelWS.Hotel h, object userState) {
            if ((this.onBeginAddOneHotelDelegate == null)) {
                this.onBeginAddOneHotelDelegate = new BeginOperationDelegate(this.OnBeginAddOneHotel);
            }
            if ((this.onEndAddOneHotelDelegate == null)) {
                this.onEndAddOneHotelDelegate = new EndOperationDelegate(this.OnEndAddOneHotel);
            }
            if ((this.onAddOneHotelCompletedDelegate == null)) {
                this.onAddOneHotelCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddOneHotelCompleted);
            }
            base.InvokeAsync(this.onBeginAddOneHotelDelegate, new object[] {
                        h}, this.onEndAddOneHotelDelegate, this.onAddOneHotelCompletedDelegate, userState);
        }
        
        public void UpdateHotel(string hotelName, string capacity) {
            base.Channel.UpdateHotel(hotelName, capacity);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateHotel(string hotelName, string capacity, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateHotel(hotelName, capacity, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateHotel(System.IAsyncResult result) {
            base.Channel.EndUpdateHotel(result);
        }
        
        private System.IAsyncResult OnBeginUpdateHotel(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string hotelName = ((string)(inValues[0]));
            string capacity = ((string)(inValues[1]));
            return this.BeginUpdateHotel(hotelName, capacity, callback, asyncState);
        }
        
        private object[] OnEndUpdateHotel(System.IAsyncResult result) {
            this.EndUpdateHotel(result);
            return null;
        }
        
        private void OnUpdateHotelCompleted(object state) {
            if ((this.UpdateHotelCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateHotelCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateHotelAsync(string hotelName, string capacity) {
            this.UpdateHotelAsync(hotelName, capacity, null);
        }
        
        public void UpdateHotelAsync(string hotelName, string capacity, object userState) {
            if ((this.onBeginUpdateHotelDelegate == null)) {
                this.onBeginUpdateHotelDelegate = new BeginOperationDelegate(this.OnBeginUpdateHotel);
            }
            if ((this.onEndUpdateHotelDelegate == null)) {
                this.onEndUpdateHotelDelegate = new EndOperationDelegate(this.OnEndUpdateHotel);
            }
            if ((this.onUpdateHotelCompletedDelegate == null)) {
                this.onUpdateHotelCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateHotelCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateHotelDelegate, new object[] {
                        hotelName,
                        capacity}, this.onEndUpdateHotelDelegate, this.onUpdateHotelCompletedDelegate, userState);
        }
        
        public void DeleteHotel(string id) {
            base.Channel.DeleteHotel(id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteHotel(string id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteHotel(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteHotel(System.IAsyncResult result) {
            base.Channel.EndDeleteHotel(result);
        }
        
        private System.IAsyncResult OnBeginDeleteHotel(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string id = ((string)(inValues[0]));
            return this.BeginDeleteHotel(id, callback, asyncState);
        }
        
        private object[] OnEndDeleteHotel(System.IAsyncResult result) {
            this.EndDeleteHotel(result);
            return null;
        }
        
        private void OnDeleteHotelCompleted(object state) {
            if ((this.DeleteHotelCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteHotelCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteHotelAsync(string id) {
            this.DeleteHotelAsync(id, null);
        }
        
        public void DeleteHotelAsync(string id, object userState) {
            if ((this.onBeginDeleteHotelDelegate == null)) {
                this.onBeginDeleteHotelDelegate = new BeginOperationDelegate(this.OnBeginDeleteHotel);
            }
            if ((this.onEndDeleteHotelDelegate == null)) {
                this.onEndDeleteHotelDelegate = new EndOperationDelegate(this.OnEndDeleteHotel);
            }
            if ((this.onDeleteHotelCompletedDelegate == null)) {
                this.onDeleteHotelCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteHotelCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteHotelDelegate, new object[] {
                        id}, this.onEndDeleteHotelDelegate, this.onDeleteHotelCompletedDelegate, userState);
        }
        
        public UsaWCF_BD_WIN.HotelWS.ResponseData Auth(UsaWCF_BD_WIN.HotelWS.RequestData data) {
            return base.Channel.Auth(data);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAuth(UsaWCF_BD_WIN.HotelWS.RequestData data, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAuth(data, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public UsaWCF_BD_WIN.HotelWS.ResponseData EndAuth(System.IAsyncResult result) {
            return base.Channel.EndAuth(result);
        }
        
        private System.IAsyncResult OnBeginAuth(object[] inValues, System.AsyncCallback callback, object asyncState) {
            UsaWCF_BD_WIN.HotelWS.RequestData data = ((UsaWCF_BD_WIN.HotelWS.RequestData)(inValues[0]));
            return this.BeginAuth(data, callback, asyncState);
        }
        
        private object[] OnEndAuth(System.IAsyncResult result) {
            UsaWCF_BD_WIN.HotelWS.ResponseData retVal = this.EndAuth(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAuthCompleted(object state) {
            if ((this.AuthCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AuthCompleted(this, new AuthCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AuthAsync(UsaWCF_BD_WIN.HotelWS.RequestData data) {
            this.AuthAsync(data, null);
        }
        
        public void AuthAsync(UsaWCF_BD_WIN.HotelWS.RequestData data, object userState) {
            if ((this.onBeginAuthDelegate == null)) {
                this.onBeginAuthDelegate = new BeginOperationDelegate(this.OnBeginAuth);
            }
            if ((this.onEndAuthDelegate == null)) {
                this.onEndAuthDelegate = new EndOperationDelegate(this.OnEndAuth);
            }
            if ((this.onAuthCompletedDelegate == null)) {
                this.onAuthCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAuthCompleted);
            }
            base.InvokeAsync(this.onBeginAuthDelegate, new object[] {
                        data}, this.onEndAuthDelegate, this.onAuthCompletedDelegate, userState);
        }
    }
}
