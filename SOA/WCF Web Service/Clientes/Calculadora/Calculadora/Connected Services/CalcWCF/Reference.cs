//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Calculadora.CalcWCF {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Res", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class Res : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ClockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SumField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Clock {
            get {
                return this.ClockField;
            }
            set {
                if ((this.ClockField.Equals(value) != true)) {
                    this.ClockField = value;
                    this.RaisePropertyChanged("Clock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Sum {
            get {
                return this.SumField;
            }
            set {
                if ((this.SumField.Equals(value) != true)) {
                    this.SumField = value;
                    this.RaisePropertyChanged("Sum");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CalcWCF.ICalc")]
    public interface ICalc {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalc/Sum", ReplyAction="http://tempuri.org/ICalc/SumResponse")]
        int Sum(int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICalc/Sum", ReplyAction="http://tempuri.org/ICalc/SumResponse")]
        System.IAsyncResult BeginSum(int x, int y, System.AsyncCallback callback, object asyncState);
        
        int EndSum(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalc/SumClock", ReplyAction="http://tempuri.org/ICalc/SumClockResponse")]
        Calculadora.CalcWCF.Res SumClock(int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICalc/SumClock", ReplyAction="http://tempuri.org/ICalc/SumClockResponse")]
        System.IAsyncResult BeginSumClock(int x, int y, System.AsyncCallback callback, object asyncState);
        
        Calculadora.CalcWCF.Res EndSumClock(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICalcChannel : Calculadora.CalcWCF.ICalc, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SumClockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SumClockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Calculadora.CalcWCF.Res Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Calculadora.CalcWCF.Res)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CalcClient : System.ServiceModel.ClientBase<Calculadora.CalcWCF.ICalc>, Calculadora.CalcWCF.ICalc {
        
        private BeginOperationDelegate onBeginSumDelegate;
        
        private EndOperationDelegate onEndSumDelegate;
        
        private System.Threading.SendOrPostCallback onSumCompletedDelegate;
        
        private BeginOperationDelegate onBeginSumClockDelegate;
        
        private EndOperationDelegate onEndSumClockDelegate;
        
        private System.Threading.SendOrPostCallback onSumClockCompletedDelegate;
        
        public CalcClient() {
        }
        
        public CalcClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CalcClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalcClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalcClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<SumCompletedEventArgs> SumCompleted;
        
        public event System.EventHandler<SumClockCompletedEventArgs> SumClockCompleted;
        
        public int Sum(int x, int y) {
            return base.Channel.Sum(x, y);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSum(int x, int y, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSum(x, y, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndSum(System.IAsyncResult result) {
            return base.Channel.EndSum(result);
        }
        
        private System.IAsyncResult OnBeginSum(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int x = ((int)(inValues[0]));
            int y = ((int)(inValues[1]));
            return this.BeginSum(x, y, callback, asyncState);
        }
        
        private object[] OnEndSum(System.IAsyncResult result) {
            int retVal = this.EndSum(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSumCompleted(object state) {
            if ((this.SumCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SumCompleted(this, new SumCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SumAsync(int x, int y) {
            this.SumAsync(x, y, null);
        }
        
        public void SumAsync(int x, int y, object userState) {
            if ((this.onBeginSumDelegate == null)) {
                this.onBeginSumDelegate = new BeginOperationDelegate(this.OnBeginSum);
            }
            if ((this.onEndSumDelegate == null)) {
                this.onEndSumDelegate = new EndOperationDelegate(this.OnEndSum);
            }
            if ((this.onSumCompletedDelegate == null)) {
                this.onSumCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSumCompleted);
            }
            base.InvokeAsync(this.onBeginSumDelegate, new object[] {
                        x,
                        y}, this.onEndSumDelegate, this.onSumCompletedDelegate, userState);
        }
        
        public Calculadora.CalcWCF.Res SumClock(int x, int y) {
            return base.Channel.SumClock(x, y);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSumClock(int x, int y, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSumClock(x, y, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Calculadora.CalcWCF.Res EndSumClock(System.IAsyncResult result) {
            return base.Channel.EndSumClock(result);
        }
        
        private System.IAsyncResult OnBeginSumClock(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int x = ((int)(inValues[0]));
            int y = ((int)(inValues[1]));
            return this.BeginSumClock(x, y, callback, asyncState);
        }
        
        private object[] OnEndSumClock(System.IAsyncResult result) {
            Calculadora.CalcWCF.Res retVal = this.EndSumClock(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSumClockCompleted(object state) {
            if ((this.SumClockCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SumClockCompleted(this, new SumClockCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SumClockAsync(int x, int y) {
            this.SumClockAsync(x, y, null);
        }
        
        public void SumClockAsync(int x, int y, object userState) {
            if ((this.onBeginSumClockDelegate == null)) {
                this.onBeginSumClockDelegate = new BeginOperationDelegate(this.OnBeginSumClock);
            }
            if ((this.onEndSumClockDelegate == null)) {
                this.onEndSumClockDelegate = new EndOperationDelegate(this.OnEndSumClock);
            }
            if ((this.onSumClockCompletedDelegate == null)) {
                this.onSumClockCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSumClockCompleted);
            }
            base.InvokeAsync(this.onBeginSumClockDelegate, new object[] {
                        x,
                        y}, this.onEndSumClockDelegate, this.onSumClockCompletedDelegate, userState);
        }
    }
}
